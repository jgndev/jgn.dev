name: CI

on:
  push:
    branches-ignore: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-code:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'
        cache: true

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Generate Templ files
      run: |
        go install github.com/a-h/templ/cmd/templ@v0.3.898
        templ generate

    - name: Install formatting and linting tools
      run: |
        go install golang.org/x/tools/cmd/goimports@latest
        go install honnef.co/go/tools/cmd/staticcheck@latest
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        go install golang.org/x/vuln/cmd/govulncheck@latest

    - name: Format code and imports
      run: |
        go fmt ./...
        goimports -w .
        
    - name: Check if code is formatted
      run: |
        if [ -n "$(gofmt -l .)" ]; then
          echo "Code is not formatted. Please run 'go fmt ./...' and 'goimports -w .'"
          gofmt -l .
          exit 1
        fi

    - name: Run go vet
      run: go vet ./...

    - name: Run staticcheck
      run: staticcheck ./...

    - name: Run golangci-lint
      run: golangci-lint run --timeout=5m

    - name: Run vulnerability check
      run: govulncheck ./...

    - name: Build application
      run: go build -v ./...

    - name: Run tests with coverage
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov (optional)
      if: success()
      run: |
        if [ -f coverage.out ]; then
          echo "Coverage file generated successfully"
          # Uncomment next line if you want to upload to codecov
          # bash <(curl -s https://codecov.io/bash)
        fi

    - name: Check mod tidiness
      run: |
        go mod tidy
        if [ -n "$(git status --porcelain go.mod go.sum)" ]; then
          echo "go.mod or go.sum is not tidy. Please run 'go mod tidy'"
          git diff go.mod go.sum
          exit 1
        fi
 